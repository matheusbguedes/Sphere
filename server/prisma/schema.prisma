generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  github_id  Int      @unique
  name       String
  login      String
  avatar_url String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  followers Follower[] @relation("follower")
  following Follower[] @relation("following")
  posts     Post[]
  likes     Like[]
  comments  Comment[]

  @@map("users")
}

model Follower {
  id         String   @id @default(uuid())
  follower   String   @map("follower_id")
  followed   String   @map("followed_id")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user   User @relation("following", fields: [follower], references: [id])
  friend User @relation("follower", fields: [followed], references: [id])

  @@index([follower], name: "follower")
  @@index([followed], name: "followed")
  @@map("followers")
}

model Post {
  id             String   @id @default(uuid())
  post_image_url String?
  content        String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  user_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  likes    Like[]
  comments Comment[]

  @@map("posts")
}

model Like {
  id         String   @id @default(uuid())
  user_id    String
  post_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)

  @@map("likes")
}

model Comment {
  id         String   @id @default(uuid())
  user_id    String
  post_id    String
  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)

  @@map("comments")
}
